name: Update PNG from Drawio

on:
  push:
    branches: [main]
    paths:
      - '**.drawio'

jobs:
  update-png:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    services:
      drawio:
        image: jgraph/drawio
        ports:
          - 8080:8080
        volumes:
          - ./:/data
        options: --shm-size=2g --memory=4g
        env:
          GITHUB_ACTIONS: "true"
          CI: "true"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Wait for drawio service
        run: |
          retry_count=0
          max_retries=10
          until curl -s http://localhost:8080 > /dev/null; do
            echo "Waiting for Draw.io service..."
            sleep 5
            retry_count=$((retry_count + 1))
            if [ "$retry_count" -eq "$max_retries" ]; then
              echo "Draw.io service failed to start"
              exit 1
            fi
          done
          echo "Draw.io service is up!"

      - name: Get changed files
        id: changed_files
        run: |
          if git rev-parse --verify HEAD~1 > /dev/null 2>&1; then
            CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          else
            CHANGED_FILES=$(git ls-files)
          fi
          echo "::set-output name=files::${CHANGED_FILES}"

      - name: Filter .drawio files
        id: drawio_files
        run: |
          DRAWIO_FILES=$(echo "${{ steps.changed_files.outputs.files }}" | grep -E '\.drawio$')
          echo "::set-output name=files::${DRAWIO_FILES}"

      - name: Convert drawio to PNG
        if: steps.drawio_files.outputs.files != ''
        run: |
          for DRAWIO_FILE in ${DRAWIO_FILES}; do
            PNG_FILE="${DRAWIO_FILE%.drawio}.png"
            curl -X POST "http://localhost:8080/convert" \
              -F "file=@$DRAWIO_FILE" \
              -F "format=png" \
              -F "scale=2" \
              -F "page=1" \
              -o "$PNG_FILE" \
              --fail

            HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "http://localhost:8080/convert")
            if [ "$HTTP_CODE" -ne 200 ]; then
              echo "HTTP Error: $HTTP_CODE"
              exit 1
            fi

            if [ ! -s "$PNG_FILE" ]; then
              echo "Ошибка конвертации: $DRAWIO_FILE"
              exit 1
            fi

            PNG_NAME=$(basename "$PNG_FILE")
            sed -i "s|!\[.*\]\(.*\.\(svg\|png\)\)|![$PNG_NAME]($PNG_NAME)|g" README.md
          done
        env:
          DRAWIO_FILES: ${{ steps.drawio_files.outputs.files }}

      - name: Commit and push changes
        if: steps.drawio_files.outputs.files != ''
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add *.png README.md || echo "Nothing to add"
          git commit -m "Auto-update PNGs for modified .drawio files" || exit 0
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}